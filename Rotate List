# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    # @param head, a ListNode
    # @param k, an integer
    # @return a ListNode
    def rotateRight(self,head,k):
        if k ==0 or head ==None or head.next ==None:
            return head
        slow = head
        fast = head
        for i in range(k):
            fast = fast.next
            if fast == None:
                fast = head

        while (fast.next !=None):
            fast = fast.next
            slow = slow.next
        newHead = slow.next   
        if newHead ==None:
            return head
        slow.next = None
        fast.next = head
        return newHead
